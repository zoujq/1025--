C51 COMPILER V9.56.0.0   YX23F01CB_ISR                                                     11/22/2020 10:41:36 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE YX23F01CB_ISR
OBJECT MODULE PLACED IN .\Output\YX23F01CB_ISR.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE ..\..\User\C\YX23F01CB_ISR.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Applicat
                    -ion;..\..\User\INC;..\..\Libraries;..\..\Libraries;..\..\User\INC) DEBUG OBJECTEXTEND PRINT(.\List\YX23F01CB_ISR.lst) TA
                    -BS(2) OBJECT(.\Output\YX23F01CB_ISR.obj)

line level    source

   1          
   2          #include "YX23F01CB.h"
   3          
   4          //================================================================================
   5          extern void CTK_ISR_Handle(void);
   6          
   7          /****************************************************************************
   8          * Function Name  : ISR_INT0
   9          * Description    : INT0 interrupt request
  10          * Input          : None
  11          * Output         : None
  12          * Return         : None
  13          ****************************************************************************/
  14          void ISR_INT0(void)      interrupt INT0_VECTOR
  15          {
  16   1        while(1);
  17   1      }
  18          
  19          /****************************************************************************
  20          * Function Name  : ISR_Timer0
  21          * Description    : Timer0 interrupt request
  22          * Input          : None
  23          * Output         : None
  24          * Return         : None
  25          ****************************************************************************/
  26          void ISR_Timer0(void)     interrupt TIMER0_VECTOR
  27          {
  28   1        while(1);
  29   1      }
  30          
  31          /****************************************************************************
  32          * Function Name  : ISR_INT1
  33          * Description    : INT1 interrupt request
  34          * Input          : None
  35          * Output         : None
  36          * Return         : None
  37          ****************************************************************************/
  38          void ISR_INT1(void)       interrupt INT1_VECTOR
  39          {
  40   1        while(1);
  41   1      }
  42          
  43          /****************************************************************************
  44          * Function Name  : ISR_Timer1
  45          * Description    : Timer1 interrupt request
  46          * Input          : None
  47          * Output         : None
  48          * Return         : None
  49          ****************************************************************************/
  50          void ISR_Timer1(void)     interrupt TIMER1_VECTOR
  51          {
  52   1        while(1);
  53   1      }
C51 COMPILER V9.56.0.0   YX23F01CB_ISR                                                     11/22/2020 10:41:36 PAGE 2   

  54          
  55          /****************************************************************************
  56          * Function Name  : ISR_UART1
  57          * Description    : UART1 interrupt request
  58          * Input          : None
  59          * Output         : None
  60          * Return         : None
  61          ****************************************************************************/
  62          void ISR_UART1(void)     interrupt UART1_VECTOR
  63          {
  64   1        while(1);
  65   1      }
  66          
  67          /****************************************************************************
  68          * Function Name  : ISR_WDT
  69          * Description    : WDT interrupt request
  70          * Input          : None
  71          * Output         : None
  72          * Return         : None
  73          ****************************************************************************/
  74          void ISR_WDT(void)       interrupt WDT_VECTOR
  75          {
  76   1        while(1);
  77   1      }
  78          
  79          /****************************************************************************
  80          * Function Name  : ISR_IIC
  81          * Description    : IIC interrupt request
  82          * Input          : None
  83          * Output         : None
  84          * Return         : None
  85          ****************************************************************************/
  86          void ISR_IIC(void)       interrupt IIC_VECTOR
  87          {
  88   1        while(1);
  89   1      }
  90          
  91          /****************************************************************************
  92          * Function Name  : ISR_Timer3
  93          * Description    : Timer3 interrupt request
  94          * Input          : None
  95          * Output         : None
  96          * Return         : None
  97          ****************************************************************************/
  98          void ISR_Timer3(void)     interrupt T3_VECTOR
  99          {
 100   1        while(1);
 101   1      }
 102          
 103          /****************************************************************************
 104          * Function Name  : ISR_Timer4
 105          * Description    : Timer4 interrupt request
 106          * Input          : None
 107          * Output         : None
 108          * Return         : None
 109          ****************************************************************************/
 110          void ISR_Timer4(void)     interrupt T4_VECTOR
 111          {
 112   1        while(1);
 113   1      }
 114          
 115          /****************************************************************************
C51 COMPILER V9.56.0.0   YX23F01CB_ISR                                                     11/22/2020 10:41:36 PAGE 3   

 116          * Function Name  : ISR_PWM
 117          * Description    : PWM interrupt request
 118          * Input          : None
 119          * Output         : None
 120          * Return         : None
 121          ****************************************************************************/
 122          void ISR_PWM(void)       interrupt PWM_VECTOR
 123          {
 124   1        while(1);
 125   1      }
 126          
 127          /****************************************************************************
 128          * Function Name  : ISR_CTK
 129          * Description    : CTK interrupt request
 130          * Input          : None
 131          * Output         : None
 132          * Return         : None
 133          ****************************************************************************/
 134          
 135          void ISR_CTK(void)      interrupt CTK_VECTOR
 136          {
 137   1        CTK_ISR_Handle();
 138   1      }
 139          
 140          /****************************************************************************
 141          * Function Name  : ISR_ADC
 142          * Description    : ADC interrupt request
 143          * Input          : None
 144          * Output         : None
 145          * Return         : None
 146          ****************************************************************************/
 147          void ISR_ADC(void)      interrupt ADC_VECTOR
 148          {
 149   1        while(1);
 150   1      }
 151          
 152          /****************************************************************************
 153          * Function Name  : ISR_INT16_17
 154          * Description    : INT16~17 interrupt request
 155          * Input          : None
 156          * Output         : None
 157          * Return         : None
 158          ****************************************************************************/
 159          void ISR_INT16_17(void)  interrupt INT16_17_VECTOR
 160          {
 161   1        while(1);
 162   1      }
 163          
 164          /*********************************END OF FILE************************************/
 165          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     83    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
