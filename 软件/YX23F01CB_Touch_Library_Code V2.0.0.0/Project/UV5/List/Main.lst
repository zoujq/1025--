C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\Main.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE ..\..\User\Main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Application;..\..\U
                    -ser\INC;..\..\Libraries;..\..\Libraries;..\..\User\INC) DEBUG OBJECTEXTEND PRINT(.\List\Main.lst) TABS(2) OBJECT(.\Outpu
                    -t\Main.obj)

line level    source

   1          
   2          //================================================================================
   3          #define  ALLOCATE_EXTERN
   4          #include "YX23F01CB.h"
   5          #include "YX23F01CB_SYS.h"
   6          #include "YX23F01CB_IO_INIT.h"
   7          #include "YX23F01CB_GeneralKey_Touch_Lib_V2.00\YX23F01CB_GeneralKey_Touch_Lib.h"
   8          #include "YX23F01CB_GeneralKey_Touch_Lib_V2.00\YX23F01CB_GeneralKey_Touch_Auxiliary.h"
   9          #include "YX23F01CB_TouchUartDebug_Lib_V2.00\YX23F01CB_TouchUartDebug_Lib_CFG.h"
  10          #include "YX23F01CB_TouchUartDebug_Lib_V2.00\YX23F01CB_TouchUartDebug_Lib.h"
  11          #include "YX23F01CB_PORT_MAP.h"
  12          #include <stdio.h>
  13          
  14          //=======================================public data=====================================
  15          //display buffer
  16          char g_shu_ma_guan1=0;
  17          char g_shu_ma_guan2=0;
  18          char g_touch_led1=0;
  19          char g_touch_led2=0;
  20          char g_touch_led3=0;
  21          //work status
  22          char g_work_mode=0;
  23          char g_feng_su=0;
  24          char g_yao_tou=0;
  25          char g_ding_shi=0;
  26          u16  g_ding_shi_timer=0;
  27          char g_xi_ping=0;
  28          u16 op_over_time=0;
  29          char op_type=0;
  30          //=======================================delay============================================================
  31          void Delay_50us(unsigned int n)    
  32          {
  33   1        unsigned char i;
  34   1        while(n--)
  35   1        {
  36   2          for(i=0;i<71;i++);
  37   2        }
  38   1      }
  39          void Delay_ms(unsigned int delay_nms)
  40          {
  41   1        while(delay_nms--)
  42   1        {
  43   2          Delay_50us(20);
  44   2        }
  45   1      }
  46          //===================================================================================================
  47          //=======================================printf===========================================================
             -=
  48          #define PRINTF_BAUDRATE     9600   
  49          #define TX  P2_0
  50          void init_printf()
  51          {
  52   1        P2M0 = 0xC1;                //
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 2   

  53   1        
  54   1        TXD_MAP = 0x20;           //TXD
  55   1        
  56   1        T4CON = 0x06;           //
  57   1      
  58   1        SCON2 = 0x02;   // uart mode 1
  59   1        
  60   1        T4 = 65536.5 - (SYSCLK_FOSC / 16 / PRINTF_BAUDRATE); //
  61   1      
  62   1      
  63   1      }
  64          
  65          char putchar (char c)
  66          {
  67   1        SBUF = c;
  68   1      
  69   1        while(!TI);
  70   1      
  71   1        TI = 0;
  72   1          return 0;
  73   1      }
  74          //===================================================================================================
  75          #define DISPLAY_A  P2_1
  76          #define DISPLAY_B  P2_0
  77          #define DISPLAY_C  P0_1
  78          #define DISPLAY_D  P0_0
  79          #define DISPLAY_E  P2_7
  80          #define DISPLAY_F  P2_6
  81          #define DISPLAY_G  P2_5
  82          //
  83          #define DISPLAY_COM1 P3_4
  84          #define DISPLAY_COM2 P2_3
  85          #define TOUCH_LED_COM P2_2
  86          
  87          void init_display()
  88          {
  89   1        P2M1=GPIO_Out_PP;
  90   1        P2M0=GPIO_Out_PP;
  91   1        P0M1=GPIO_Out_PP;
  92   1        P0M0=GPIO_Out_PP;
  93   1        P2M7=GPIO_Out_PP;
  94   1        P2M6=GPIO_Out_PP;
  95   1        P2M5=GPIO_Out_PP;
  96   1      
  97   1        P3M4=GPIO_Out_PP;
  98   1        P2M3=GPIO_Out_PP;
  99   1        P2M2=GPIO_Out_PP;
 100   1      
 101   1        DISPLAY_A=0;
 102   1        DISPLAY_B=0;
 103   1        DISPLAY_C=0;
 104   1        DISPLAY_D=0;
 105   1        DISPLAY_E=0;
 106   1        DISPLAY_F=0;
 107   1        DISPLAY_G=0;
 108   1      
 109   1        DISPLAY_COM1=1;
 110   1        DISPLAY_COM2=1;
 111   1        TOUCH_LED_COM=1;
 112   1      }
 113          
 114          void display_close()
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 3   

 115          {
 116   1        DISPLAY_A=0;
 117   1        DISPLAY_B=0;
 118   1        DISPLAY_C=0;
 119   1        DISPLAY_D=0;
 120   1        DISPLAY_E=0;
 121   1        DISPLAY_F=0;
 122   1        DISPLAY_G=0;
 123   1      
 124   1        DISPLAY_COM1=1;
 125   1        DISPLAY_COM2=1;
 126   1        TOUCH_LED_COM=1;
 127   1      
 128   1      }
 129          void display(char c,char b)
 130          {
 131   1        DISPLAY_COM1=1;
 132   1        DISPLAY_COM2=1;
 133   1        TOUCH_LED_COM=1;
 134   1        switch(c)
 135   1        {
 136   2          case 0:
 137   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=0;
 138   2            break;
 139   2          case 1:
 140   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 141   2            break;
 142   2          case 2:
 143   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=0;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=0;  DISPLAY_G=1;
 144   2            break;
 145   2          case 3:
 146   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=1;
 147   2            break;
 148   2          case 4:
 149   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 150   2            break;
 151   2          case 5:
 152   2            DISPLAY_A=1;  DISPLAY_B=0;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 153   2            break;
 154   2          case 6:
 155   2            DISPLAY_A=1;  DISPLAY_B=0;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 156   2            break;
 157   2          case 7:
 158   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 159   2            break;
 160   2          case 8:
 161   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 162   2            break;
 163   2          case 9:
 164   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 165   2            break;
 166   2          case 'H':
 167   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 168   2            break;
 169   2          case 'P':
 170   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=0;  DISPLAY_D=0;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 171   2            break;
 172   2          default:
 173   2            DISPLAY_A=0;  DISPLAY_B=0;  DISPLAY_C=0;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 174   2            break;
 175   2          
 176   2        }
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 4   

 177   1        if(b==1)
 178   1        {
 179   2          DISPLAY_COM1=0;
 180   2          DISPLAY_COM2=1;
 181   2          TOUCH_LED_COM=1;
 182   2        }
 183   1        else if(b==2)
 184   1        {
 185   2          DISPLAY_COM1=1;
 186   2          DISPLAY_COM2=0;
 187   2          TOUCH_LED_COM=1;
 188   2        }
 189   1        else if(b==3)
 190   1        {
 191   2          DISPLAY_A=0;  
 192   2          DISPLAY_B=0;  
 193   2          DISPLAY_C=0;  
 194   2          DISPLAY_D=0;  
 195   2          DISPLAY_E=0;  
 196   2          DISPLAY_F=0;  
 197   2          DISPLAY_G=0;
 198   2          if(g_touch_led1==1)
 199   2          {
 200   3            DISPLAY_B=1;
 201   3          }
 202   2          if(g_touch_led2==1)
 203   2          {
 204   3            DISPLAY_C=1;
 205   3          }
 206   2          if(g_touch_led3==1)
 207   2          {
 208   3            DISPLAY_D=1;
 209   3          }
 210   2          DISPLAY_COM1=1;
 211   2          DISPLAY_COM2=1;
 212   2          TOUCH_LED_COM=0;
 213   2        }
 214   1        
 215   1      }
 216          void display_flush()
 217          {
 218   1        static char tt=0;
 219   1        if(g_xi_ping==0)
 220   1        {
 221   2          if(tt==1)
 222   2          {
 223   3            display(g_shu_ma_guan1,1);
 224   3          }
 225   2          else if(tt==2)
 226   2          {
 227   3            display(g_shu_ma_guan2,2);
 228   3          }
 229   2          else if(tt==3)
 230   2          {
 231   3            display('X',3);
 232   3            tt=0;
 233   3          }
 234   2          tt++;
 235   2        }
 236   1        else
 237   1        {
 238   2          display_close();
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 5   

 239   2        }
 240   1        
 241   1      
 242   1      }
 243          //===================================================================================================
 244          #define BUZZ P2_4
 245          void  buzzer()
 246          {
 247   1        static char inited=0;
 248   1        int i=0;
 249   1        // if(inited==0)
 250   1        // {
 251   1          P2M4 = 0xC2;                        //P24设置为推挽输出
 252   1          PWM3_MAP = 0x24;          //PWM3映射P03口
 253   1          PWM3P = 0x20;           //PWM周期为0xFF
 254   1          PWM3D = 0x10;           //PWM占空比设置
 255   1          PWM3C = 0x97;             //使能PWM3，关闭中断，允许输出，时钟4分频
 256   1          inited=1;
 257   1        // }  
 258   1        PWM3C = 0x97; 
 259   1        Delay_ms(100);
 260   1        PWM3C = 0x07;
 261   1        P2M4=GPIO_In_AN;
 262   1        
 263   1      }
 264          //================================================================================
 265          void touch_key_check()
 266          {
 267   1        static char touched=0;
 268   1        if(TouchKeyFlag)
 269   1        {
 270   2          if(touched==0)
 271   2          {
 272   3            touched=1;
 273   3            if(TouchKeyFlag & 0x0800L)
 274   3            {
 275   4              if(g_work_mode==0)
 276   4              {
 277   5                g_work_mode=1;
 278   5                g_ding_shi=0;
 279   5                g_feng_su=1;
 280   5                g_yao_tou=0;  
 281   5                
 282   5              }
 283   4              else
 284   4              {
 285   5                g_work_mode=0;
 286   5                g_ding_shi=0;
 287   5                g_feng_su=0;
 288   5                g_yao_tou=0;
 289   5                g_xi_ping=0;
 290   5              }
 291   4      
 292   4            }
 293   3            if(g_work_mode==1)
 294   3            {
 295   4              buzzer();
 296   4              if(TouchKeyFlag & 0x0400L)
 297   4              {
 298   5                op_over_time=0;
 299   5                op_type=0;
 300   5                if(g_feng_su==1)
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 6   

 301   5                {
 302   6                  g_feng_su=2;
 303   6                }
 304   5                else if(g_feng_su==2)
 305   5                {
 306   6                  g_feng_su=3;
 307   6                }
 308   5                else
 309   5                {
 310   6                  g_feng_su=1;
 311   6                }
 312   5              }
 313   4              else if(TouchKeyFlag & 0x0200L)
 314   4              {
 315   5                if(g_yao_tou==0)
 316   5                {
 317   6                  g_yao_tou=1;
 318   6                }
 319   5                else
 320   5                {
 321   6                  g_yao_tou=0;
 322   6                }
 323   5              }
 324   4              else if(TouchKeyFlag & 0x0100L)
 325   4              {
 326   5                op_over_time=0;
 327   5                if(g_ding_shi<9)
 328   5                {
 329   6                  g_ding_shi++;
 330   6                  op_type=1;
 331   6                }
 332   5                else
 333   5                {
 334   6                  g_ding_shi=0;
 335   6                  op_type=0;
 336   6                }
 337   5                g_ding_shi_timer=g_ding_shi*60;         
 338   5              }
 339   4            }
 340   3          }
 341   2          
 342   2        }
 343   1        else
 344   1        {
 345   2          touched=0;
 346   2        }
 347   1      }
 348          
 349          //========================================NEC=====================================
 350          u8 nec_timer=0; 
 351          u8 nec_end_flag=0;
 352          u8 nec_start_flag=0;
 353          xdata u8 nec_buff[34];
 354          u8 nec_index=0;
 355          xdata u8 nec_data[4];
 356          u16 nec_doing=0;
 357          void init_timer0()
 358          {
 359   1        TCON1 = 0x00;           //
 360   1        TMOD = 0x00;            //
 361   1        
 362   1        TH0 = 0xFF;
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 7   

 363   1        TL0 = 0x7B;             //100us
 364   1        IE |= 0x02;             //
 365   1        TCON |= 0x10;           //
 366   1          
 367   1      }
 368          void init_ext_int_17()
 369          {
 370   1        P3M5 = 0x69;            //P35设置为带SMT上拉输入
 371   1        PITS4 |= 0x04;          //INT17下降沿  
 372   1        PINTE2 = 0x02;
 373   1        IE2 |= 0x01;              //打开INT17中断
 374   1        
 375   1      }
 376          void ISR_INT_TIME0(void) interrupt TIMER0_VECTOR  //时基100us
 377          {
 378   1        static u32 tt=0;
 379   1      
 380   1        nec_timer++;
 381   1        if(nec_timer>150)
 382   1        {
 383   2          nec_end_flag=1;
 384   2          nec_timer=0;
 385   2        }
 386   1        if(tt%50)//5ms
 387   1        {
 388   2          display_flush();
 389   2        }
 390   1        
 391   1        if(tt++>600000)
 392   1        {
 393   2          tt=0;
 394   2          if(g_ding_shi_timer>0)
 395   2          {
 396   3            g_ding_shi_timer--;
 397   3            g_ding_shi= g_ding_shi_timer/60+1;
 398   3            if(g_ding_shi_timer==0)
 399   3            {
 400   4              g_work_mode=0;
 401   4              g_ding_shi=0;
 402   4            } 
 403   3              
 404   3          }
 405   2        }
 406   1        nec_doing++;
 407   1      } 
 408          
 409          
 410          void ISR_INT16_17(void)  interrupt INT16_17_VECTOR
 411          {
 412   1        PINTF2 &=~ 0x02;        //清除INT17中断标志位    
 413   1        if(nec_start_flag)
 414   1        {
 415   2          if(nec_timer>105)
 416   2          {
 417   3            nec_index=0;
 418   3          }
 419   2          nec_buff[nec_index]=nec_timer;
 420   2          nec_timer=0;
 421   2          nec_index++;
 422   2          if(nec_index>33)
 423   2          {
 424   3            nec_index=0;
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 8   

 425   3          }
 426   2          nec_end_flag=0;
 427   2        }
 428   1        else
 429   1        {
 430   2          nec_start_flag=1;
 431   2          nec_timer=0;
 432   2        }
 433   1      }
 434          void nec_chu_li();
 435          void nec_decode()
 436          {
 437   1        if(nec_index && nec_end_flag)
 438   1        {
 439   2          nec_data[0]=(nec_buff[1]<0x0F ? 0 : 1)<<0 |
 440   2                (nec_buff[2]<0x0F ? 0 : 1)<<1 |
 441   2                (nec_buff[3]<0x0F ? 0 : 1)<<2 |
 442   2                (nec_buff[4]<0x0F ? 0 : 1)<<3 |
 443   2                (nec_buff[5]<0x0F ? 0 : 1)<<4 |
 444   2                (nec_buff[6]<0x0F ? 0 : 1)<<5 |
 445   2                (nec_buff[7]<0x0F ? 0 : 1)<<6 |
 446   2                (nec_buff[8]<0x0F ? 0 : 1)<<7 ;
 447   2          nec_data[1]=(nec_buff[9]<0x0F ? 0 : 1)<<0 |
 448   2                (nec_buff[10]<0x0F ? 0 : 1)<<1 |
 449   2                (nec_buff[11]<0x0F ? 0 : 1)<<2 |
 450   2                (nec_buff[12]<0x0F ? 0 : 1)<<3 |
 451   2                (nec_buff[13]<0x0F ? 0 : 1)<<4 |
 452   2                (nec_buff[14]<0x0F ? 0 : 1)<<5 |
 453   2                (nec_buff[15]<0x0F ? 0 : 1)<<6 |
 454   2                (nec_buff[16]<0x0F ? 0 : 1)<<7 ;
 455   2          nec_data[2]=(nec_buff[17]<0x0F ? 0 : 1)<<0 |
 456   2                (nec_buff[18]<0x0F ? 0 : 1)<<1 |
 457   2                (nec_buff[19]<0x0F ? 0 : 1)<<2 |
 458   2                (nec_buff[20]<0x0F ? 0 : 1)<<3 |
 459   2                (nec_buff[21]<0x0F ? 0 : 1)<<4 |
 460   2                (nec_buff[22]<0x0F ? 0 : 1)<<5 |
 461   2                (nec_buff[23]<0x0F ? 0 : 1)<<6 |
 462   2                (nec_buff[24]<0x0F ? 0 : 1)<<7 ;
 463   2          nec_data[3]=(nec_buff[25]<0x0F ? 0 : 1)<<0 |
 464   2                (nec_buff[26]<0x0F ? 0 : 1)<<1 |
 465   2                (nec_buff[27]<0x0F ? 0 : 1)<<2 |
 466   2                (nec_buff[28]<0x0F ? 0 : 1)<<3 |
 467   2                (nec_buff[29]<0x0F ? 0 : 1)<<4 |
 468   2                (nec_buff[30]<0x0F ? 0 : 1)<<5 |
 469   2                (nec_buff[31]<0x0F ? 0 : 1)<<6 |
 470   2                (nec_buff[32]<0x0F ? 0 : 1)<<7 ;
 471   2          nec_index=0;
 472   2          nec_chu_li(); 
 473   2          
 474   2          putchar(nec_data[0]);
 475   2          putchar(nec_data[1]);
 476   2          putchar(nec_data[2]);
 477   2          putchar(nec_data[3]);
 478   2          
 479   2          {
 480   3            int i=0;
 481   3            for(i=0;i<33;i++)
 482   3            {
 483   4              nec_buff[i]=0;
 484   4            }
 485   3            
 486   3          }
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 9   

 487   2        }
 488   1      }
 489          void nec_chu_li()
 490          {
 491   1        if(nec_data[0]==0 && nec_data[1]==0xFF)
 492   1        {
 493   2          if(nec_doing<3000)
 494   2          {
 495   3            return;
 496   3          }
 497   2          nec_doing=0;
 498   2          if(nec_data[2]==0x46)
 499   2          {
 500   3            if(g_work_mode==0)
 501   3            {
 502   4              g_work_mode=1;
 503   4              g_ding_shi=0;
 504   4              g_feng_su=1;
 505   4              g_yao_tou=0;
 506   4            }
 507   3            else
 508   3            {
 509   4              g_work_mode=0;
 510   4              g_ding_shi=0;
 511   4              g_feng_su=0;
 512   4              g_yao_tou=0;
 513   4              g_xi_ping=0;
 514   4            }
 515   3      
 516   3          }
 517   2          if(g_work_mode==1)
 518   2          {
 519   3            buzzer();
 520   3            if(nec_data[2]==0x44)
 521   3            {
 522   4              op_over_time=0;
 523   4              op_type=0;
 524   4              if(g_feng_su==1)
 525   4              {
 526   5                g_feng_su=2;
 527   5              }
 528   4              else if(g_feng_su==2)
 529   4              {
 530   5                g_feng_su=3;
 531   5              }
 532   4              else
 533   4              {
 534   5                g_feng_su=1;
 535   5              }
 536   4            }
 537   3            else if(nec_data[2]==0x43)
 538   3            {
 539   4              if(g_yao_tou==0)
 540   4              {
 541   5                g_yao_tou=1;
 542   5              }
 543   4              else
 544   4              {
 545   5                g_yao_tou=0;
 546   5              }
 547   4            }
 548   3            else if(nec_data[2]==0x16)
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 10  

 549   3            {
 550   4              op_over_time=0;
 551   4              if(g_ding_shi<9)
 552   4              {
 553   5                g_ding_shi++;
 554   5                op_type=1;
 555   5              }
 556   4              else
 557   4              {
 558   5                g_ding_shi=0;
 559   5                op_type=0;
 560   5              }
 561   4              g_ding_shi_timer=g_ding_shi*60;
 562   4            }
 563   3            
 564   3          }
 565   2          if(nec_data[2]==0x0D)
 566   2          {
 567   3            if(g_xi_ping==0)
 568   3            {
 569   4              g_xi_ping=1;
 570   4            }
 571   3            else
 572   3            {
 573   4              g_xi_ping=0;
 574   4            }
 575   3            
 576   3          }
 577   2        }
 578   1        
 579   1        
 580   1      }
 581          //===============================================================================
 582          #define FAN_YAO_TOU P0_7
 583          #define FAN_DW1 P1_3
 584          #define FAN_DW2 P1_2
 585          #define FAN_DW3 P1_1
 586          void init_work()
 587          {
 588   1        P0M7=GPIO_Out_PP;
 589   1        P1M3=GPIO_Out_PP;
 590   1        P1M2=GPIO_Out_PP;
 591   1        P1M1=GPIO_Out_PP;
 592   1      }
 593          void work_check()
 594          {
 595   1        if(g_work_mode==1)
 596   1        {
 597   2          g_touch_led1=1;
 598   2          if(g_yao_tou)
 599   2          {
 600   3            g_touch_led2=1;
 601   3            FAN_YAO_TOU=1;
 602   3          }
 603   2          else
 604   2          {
 605   3            g_touch_led2=0;
 606   3            FAN_YAO_TOU=0;
 607   3          }
 608   2          if(g_ding_shi_timer>0)
 609   2          {
 610   3            g_touch_led3=1;
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 11  

 611   3          }
 612   2          else
 613   2          {
 614   3            g_touch_led3=0;
 615   3          }
 616   2          if(g_feng_su==1)
 617   2          {
 618   3            FAN_DW1=1;
 619   3            FAN_DW2=0;
 620   3            FAN_DW3=0;
 621   3          }
 622   2          else if(g_feng_su==2)
 623   2          {
 624   3            FAN_DW1=0;
 625   3            FAN_DW2=1;
 626   3            FAN_DW3=0;
 627   3          }
 628   2          else if(g_feng_su==3)
 629   2          {
 630   3            FAN_DW1=0;
 631   3            FAN_DW2=0;
 632   3            FAN_DW3=1;
 633   3          }
 634   2          if(op_over_time<200)
 635   2          {
 636   3            op_over_time++;
 637   3            if(op_type==0)
 638   3            {
 639   4              g_shu_ma_guan1='P';
 640   4              g_shu_ma_guan2=g_feng_su;
 641   4            }
 642   3            else
 643   3            {
 644   4              if(g_ding_shi>=1)
 645   4              {
 646   5                g_shu_ma_guan1=g_ding_shi;
 647   5                g_shu_ma_guan2='H';
 648   5              }
 649   4              else
 650   4              {
 651   5                g_shu_ma_guan1='P';
 652   5                g_shu_ma_guan2=g_feng_su;
 653   5              }
 654   4            }
 655   3          }
 656   2          else{
 657   3            if(g_ding_shi>=1)
 658   3            {
 659   4              g_shu_ma_guan1=g_ding_shi;
 660   4              g_shu_ma_guan2='H';
 661   4            }
 662   3            else
 663   3            {
 664   4              g_shu_ma_guan1='P';
 665   4              g_shu_ma_guan2=g_feng_su;
 666   4            }
 667   3          
 668   3          }
 669   2          
 670   2      
 671   2        }
 672   1        else
C51 COMPILER V9.56.0.0   MAIN                                                              12/03/2020 08:45:12 PAGE 12  

 673   1        {
 674   2          g_feng_su=0;
 675   2          g_yao_tou=0;
 676   2          g_ding_shi=0;
 677   2          g_ding_shi_timer=0;
 678   2          g_shu_ma_guan1=0;
 679   2          g_shu_ma_guan2=0;
 680   2          g_touch_led1=0;
 681   2          g_touch_led2=0;
 682   2          g_touch_led3=0;
 683   2        }
 684   1      }
 685          
 686          
 687          //================================================================================
 688          void main()
 689          {
 690   1        SystemInit();           //16M
 691   1        FREQ_CLK = 0x10;
 692   1        IO_Init();
 693   1      
 694   1        EA = 1;
 695   1        CTK_Init(); 
 696   1        
 697   1        //init_printf();
 698   1        init_display();
 699   1        init_timer0();
 700   1        init_ext_int_17();
 701   1        init_work();
 702   1        
 703   1      
 704   1        while(1)
 705   1        {
 706   2          if(OneCycleScanDone)
 707   2          {
 708   3            Touch_Signal_Handle();
 709   3            OneCycleScanDone = 0;
 710   3          }
 711   2      
 712   2          touch_key_check();
 713   2          nec_decode();
 714   2          work_check();
 715   2          Delay_ms(10);
 716   2      
 717   2        }
 718   1      }
 719          
 720          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2258    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     38    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     28       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
